{{ define "go_primitives_struct_reference" }}
    {{ $type := .Type }}
    {{- range .Entries }}
        {{- if (Deref .Accessor) }}
            {{ LowerFirst .Name }} {{ Primitive $type }}
        {{- else }}
            {{ .Name }} {{ Primitive $type }}
        {{- end -}}
    {{ end }}
{{ end }}

{{ define "go_primitives_new_struct_reference" }}
    {{ $type := .Type }}
    {{- range .Entries }}
        {{- if .Accessor }}
            {{ LowerFirst .Name }}: {{ .Default }},
        {{- else }}
            {{ .Name }}: {{ .Default }},
        {{- end -}}
    {{ end }}
{{ end }}

{{ define "go_strings_new_struct_reference" }}
    {{ $type := .Type }}
    {{- range .Entries }}
        {{- if .Accessor }}
            {{ LowerFirst .Name }}: "{{ .Default }}",
        {{- else }}
            {{ .Name }}: "{{ .Default }}",
        {{- end -}}
    {{ end }}
{{ end }}

{{ define "go_primitives_encode" }}
    {{ $type := .Type }}
    {{- range .Entries }}
        {{- if (Deref .Accessor) }}
            e.{{ PolyglotPrimitiveEncode $type }}(x.{{ LowerFirst .Name }})
        {{- else }}
            e.{{ PolyglotPrimitiveEncode $type }}(x.{{ .Name }})
        {{- end -}}
    {{ end }}
{{ end}}

{{ define "go_primitives_decode" }}
    {{ $type := .Type }}
    {{- range .Entries }}
        {{- if (Deref .Accessor) }}
            x.{{ LowerFirst .Name }}, err = d.{{ PolyglotPrimitiveDecode $type }}()
            if err != nil {
                return err
            }
        {{- else }}
            x.{{ .Name }}, err = d.{{ PolyglotPrimitiveDecode $type }}()
            if err != nil {
                return err
            }
        {{- end -}}
    {{ end }}
{{ end}}

